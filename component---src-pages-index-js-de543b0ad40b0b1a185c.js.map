{"version":3,"sources":["webpack:///./src/components/ArticleLink.js","webpack:///./src/pages/index.js"],"names":["useStyles","makeStyles","root","flexGrow","border","fontFamily","borderRadius","padding","margin","text","fontSize","fontWeight","display","excerpt","color","marginTop","ArticleLink","title","link","classes","className","to","preArticlesContainer","justifyContent","browseByTagsText","titleText","marginBottom","articleContainer","flexWrap","query","Main","edges","data","allMarkdownRemark","Layout","map","edge","node","frontmatter","path"],"mappings":"iNAIMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,EAEVC,OAAQ,oBACRC,WAAY,0FACZC,aAAc,MACdC,QAAS,OACTC,OAAQ,iBAEVC,KAAM,CACJC,SAAU,OACVC,WAAY,MACZC,QAAS,SAEXC,QAAS,CACPH,SAAU,OACVI,MAAO,UACPC,UAAW,WAcAC,EAVK,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAML,EAAa,EAAbA,QAC3BM,EAAUnB,IAChB,OACE,yBAAKoB,UAAWD,EAAQjB,MACtB,0BAAMkB,UAAWD,EAAQV,MAAM,kBAAC,IAAD,CAAMY,GAAIH,GAAOD,IAChD,0BAAMG,UAAWD,EAAQN,SAAUA,KCzBnCb,EAAYC,aAAW,iBAAO,CAClCqB,qBAAsB,CACpBV,QAAS,OACTW,eAAgB,gBAChBf,OAAQ,SAEVgB,iBAAkB,CAChBd,SAAU,OACVC,WAAY,MACZG,MAAO,UACPT,WAAY,2FAEdoB,UAAW,CACTpB,WAAY,0FACZM,WAAY,MACZD,SAAU,OACVgB,aAAc,MACdZ,MAAO,WAETa,iBAAkB,CAChBf,QAAS,OACTgB,SAAU,YA+BDC,EAAK,aAoBHC,UA/CF,SAAC,GAAc,IAClBC,EADiB,EAAXC,KACSC,kBAAfF,MACFZ,EAAUnB,IAChB,OACE,6BACE,kBAACkC,EAAA,EAAD,KACE,yBAAKd,UAAWD,EAAQG,sBACtB,0BAAMF,UAAWD,EAAQM,WAAzB,gBACA,0BAAML,UAAWD,EAAQK,kBAAkB,kBAAC,IAAD,CAAMH,GAAG,SAAT,oBAE7C,yBAAKD,UAAWD,EAAQQ,kBACrBI,EAAMI,KAAI,SAAAC,GAAS,IAAD,EACgBA,EAAKC,KAAKC,YAAnCrB,EADS,EACTA,MAAOsB,EADE,EACFA,KAAM1B,EADJ,EACIA,QACrB,OACE,kBAAC,EAAD,CACEI,MAAOA,EACPC,KAAMqB,EACN1B,QAASA","file":"component---src-pages-index-js-de543b0ad40b0b1a185c.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n    // width: '100%',\n    border: '1px solid #e1e4e8',\n    fontFamily: 'BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji',\n    borderRadius: '6px',\n    padding: '16px',\n    margin: '0 8px 8px 8px',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: '600',\n    display: 'block',\n  },\n  excerpt: {\n    fontSize: '12px',\n    color: '#586069',\n    marginTop: '8px',\n  }\n}));\n\nconst ArticleLink = ({title, link, excerpt}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <span className={classes.text}><Link to={link}>{title}</Link></span>\n      <span className={classes.excerpt}>{excerpt}</span>\n    </div>\n  );\n};\n\nexport default ArticleLink;","import React from \"react\"\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/Layout'\nimport ArticleLink from '../components/ArticleLink';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  preArticlesContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '0 8px',\n  },\n  browseByTagsText: {\n    fontSize: '13px',\n    fontWeight: '400',\n    color: '#586069',\n    fontFamily: 'BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji',\n  },\n  titleText: {\n    fontFamily: 'BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji',\n    fontWeight: '400',\n    fontSize: '16px',\n    marginBottom: '8px',\n    color: '#24292e',\n  },\n  articleContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n}));\n\nconst Main = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  const classes = useStyles();\n  return (\n    <div>\n      <Layout>\n        <div className={classes.preArticlesContainer}>\n          <span className={classes.titleText}>Latest Posts</span>\n          <span className={classes.browseByTagsText}><Link to='/tags'>Browse by tags</Link></span>\n        </div>\n        <div className={classes.articleContainer}>\n          {edges.map(edge => {\n            const { title, path, excerpt } = edge.node.frontmatter;\n            return (\n              <ArticleLink\n                title={title}\n                link={path}\n                excerpt={excerpt}\n              />\n            );\n          })}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query BlogHomeQuery {\n    allMarkdownRemark(\n      sort: {\n        order: DESC, fields: [frontmatter___date]\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Main;\n"],"sourceRoot":""}