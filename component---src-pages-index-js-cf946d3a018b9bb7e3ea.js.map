{"version":3,"sources":["webpack:///./src/components/ArticleLink.js","webpack:///./src/pages/index.js"],"names":["useStyles","makeStyles","root","flexGrow","border","fontFamily","borderRadius","paddingBottom","margin","titleContainer","padding","display","justifyContent","text","fontSize","fontWeight","excerpt","paddingLeft","color","marginTop","date","textAlign","ArticleLink","title","link","classes","className","to","preArticlesContainer","browseByTagsText","titleText","marginBottom","articleContainer","flexWrap","query","Main","edges","data","allMarkdownRemark","Layout","map","edge","node","frontmatter","path"],"mappings":"iNAIMA,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,SAAU,EAEVC,OAAQ,oBACRC,WAAY,0FACZC,aAAc,MACdC,cAAe,OACfC,OAAQ,iBAEVC,eAAgB,CACdC,QAAS,YAETJ,aAAc,cACdK,QAAS,OAETC,eAAgB,iBAElBC,KAAM,CACJC,SAAU,OACVC,WAAY,MACZJ,QAAS,SAEXK,QAAS,CACPC,YAAa,OACbH,SAAU,OACVI,MAAO,UACPC,UAAW,OAEbC,KAAM,CACJN,SAAU,OACVI,MAAO,UACPG,UAAW,QACXb,OAAQ,kBAiBGc,EAbK,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAMR,EAAa,EAAbA,QAC3BS,EAAUzB,IAChB,OACE,yBAAK0B,UAAWD,EAAQvB,MACtB,yBAAKwB,UAAWD,EAAQhB,gBACtB,0BAAMiB,UAAWD,EAAQZ,MAAM,kBAAC,IAAD,CAAMc,GAAIH,GAAOD,IAChD,uBAAGG,UAAWD,EAAQL,MAAtB,eAEF,0BAAMM,UAAWD,EAAQT,SAAUA,KC3CnChB,EAAYC,aAAW,iBAAO,CAClC2B,qBAAsB,CACpBjB,QAAS,OACTC,eAAgB,gBAChBJ,OAAQ,SAEVqB,iBAAkB,CAChBf,SAAU,OACVC,WAAY,MACZG,MAAO,UACPb,WAAY,2FAEdyB,UAAW,CACTzB,WAAY,0FACZU,WAAY,MACZD,SAAU,OACViB,aAAc,MACdb,MAAO,WAETc,iBAAkB,CAChBrB,QAAS,OACTsB,SAAU,YA+BDC,EAAK,aAoBHC,UA/CF,SAAC,GAAc,IAClBC,EADiB,EAAXC,KACSC,kBAAfF,MACFX,EAAUzB,IAChB,OACE,6BACE,kBAACuC,EAAA,EAAD,KACE,yBAAKb,UAAWD,EAAQG,sBACtB,0BAAMF,UAAWD,EAAQK,WAAzB,gBACA,0BAAMJ,UAAWD,EAAQI,kBAAkB,kBAAC,IAAD,CAAMF,GAAG,SAAT,oBAE7C,yBAAKD,UAAWD,EAAQO,kBACrBI,EAAMI,KAAI,SAAAC,GAAS,IAAD,EACgBA,EAAKC,KAAKC,YAAnCpB,EADS,EACTA,MAAOqB,EADE,EACFA,KAAM5B,EADJ,EACIA,QACrB,OACE,kBAAC,EAAD,CACEO,MAAOA,EACPC,KAAMoB,EACN5B,QAASA","file":"component---src-pages-index-js-cf946d3a018b9bb7e3ea.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n    // width: '100%',\n    border: '1px solid #e1e4e8',\n    fontFamily: 'BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji',\n    borderRadius: '6px',\n    paddingBottom: '16px',\n    margin: '0 8px 8px 8px',\n  },\n  titleContainer: {\n    padding: '16px 10px',\n    // backgroundColor:'#8080804a',\n    borderRadius: '6px 6px 0 0',\n    display: 'flex',\n    // alignContent: 'center',\n    justifyContent: 'space-between',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: '600',\n    display: 'block',\n  },\n  excerpt: {\n    paddingLeft: '16px',\n    fontSize: '12px',\n    color: '#586069',\n    marginTop: '8px',\n  },\n  date: {\n    fontSize: '10px',\n    color: '#586069',\n    textAlign: 'right',\n    margin: '0 0 10px 0',\n  },\n}));\n\nconst ArticleLink = ({title, link, excerpt}) => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <div className={classes.titleContainer}>\n        <span className={classes.text}><Link to={link}>{title}</Link></span>\n        <p className={classes.date}>18/09/2020</p>\n      </div>\n      <span className={classes.excerpt}>{excerpt}</span>\n    </div>\n  );\n};\n\nexport default ArticleLink;","import React from \"react\"\nimport { graphql, Link } from 'gatsby';\nimport Layout from '../components/Layout'\nimport ArticleLink from '../components/ArticleLink';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(() => ({\n  preArticlesContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '0 8px',\n  },\n  browseByTagsText: {\n    fontSize: '13px',\n    fontWeight: '400',\n    color: '#586069',\n    fontFamily: 'BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji',\n  },\n  titleText: {\n    fontFamily: 'BlinkMacSystemFont,Segoe UI,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji',\n    fontWeight: '400',\n    fontSize: '16px',\n    marginBottom: '8px',\n    color: '#24292e',\n  },\n  articleContainer: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n}));\n\nconst Main = ({ data }) => {\n  const { edges } = data.allMarkdownRemark;\n  const classes = useStyles();\n  return (\n    <div>\n      <Layout>\n        <div className={classes.preArticlesContainer}>\n          <span className={classes.titleText}>Latest Posts</span>\n          <span className={classes.browseByTagsText}><Link to='/tags'>Browse by tags</Link></span>\n        </div>\n        <div className={classes.articleContainer}>\n          {edges.map(edge => {\n            const { title, path, excerpt } = edge.node.frontmatter;\n            return (\n              <ArticleLink\n                title={title}\n                link={path}\n                excerpt={excerpt}\n              />\n            );\n          })}\n        </div>\n      </Layout>\n    </div>\n  );\n}\n\nexport const query = graphql`\n  query BlogHomeQuery {\n    allMarkdownRemark(\n      sort: {\n        order: DESC, fields: [frontmatter___date]\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            path\n            excerpt\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Main;\n"],"sourceRoot":""}